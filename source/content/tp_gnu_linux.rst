TP: GNU/Linux
=============

Le système d'exploitation GNU/Linux est un OS équivalent au système d'exploitation Windows. Il est gratuit et libre. Il dispose d'une interface graphique basée sur des fenêtres qui permettent d'afficher les contenus des dossiers et des fichiers. Il dispose de programmes pour réaliser des taches de base comme le traitement de texte ou l'affichage de photos.


Organisation du système de fichiers
-----------------------------------

1. Comment sont organisés les fichiers du système d'exploitation GNU/Linux ?
2. Comment se nomme le dossier contenant tous les autres dossiers ?
3. Quel est le dossier réservé aux utilisateurs ? Donner le chemin absolu de ce dossier.
4. Comment se nomme votre dossier personnel ? Donner le chemin absolu de ce dossier.

Organiser ses fichiers et dossiers
----------------------------------

On considère l'arborescence de dossiers et fichiers suivante :

.. image:: ../img/linux_dossier.svg
   :align: center
   
#. Ouvrir l'explorateur de fichiers et vérifier que vous êtes bien dans votre espace personnel.
#. Créer les dossiers de l'arborescence qui manquent.
#. Ouvrir un éditeur de texte et créer le fichier ``essai.txt``.
#. Pour écrire le programme Python, vous pouvez utiliser l'application **Thonny** ou un éditeur de texte.

   Saisir le programme puis l'enregistrer sous le nom ``pgm_1.py``.

#. Récupérer sur l'ENT, dans moodle, l'image ``tux.png`` puis l'enregistrer dans le dossier *Images*.
#. Donner les chemins absolus des 3 fichiers ``essai.txt``, ``pgm_1.py`` et ``tux.png``.

Le terminal linux
-----------------

Linux peut être utilisé sans aucune interface graphique ce qui en fait sa force. L'utilisation de GNU/Linux se fait alors en ligne de commandes. Le **terminal** est une application qui permet de saisir des lignes de commandes.

1.  Ouvrir une nouvelle fenêtre de "Terminal". Ce terminal est aussi appelé console. Noter l'invite de commande proposée, c'est à dire tous les caractères situés avant le curseur de saisie!

2. Il existe de très nombreuses commandes. On va en découvrir quelques unes assez simples mais très utiles que vous allez tester.

   a. La commande ``pwd`` permet de savoir où l'on se trouve dans l'arborescence de fichiers. Dans quel dossier êtes-vous à l'ouverture du terminal ?

   b. La commande ``ls`` liste le contenu du dossier ou vous vous trouvez. Quels sont les dossiers et fichiers affichés  par cette commande ?

   c. La commande ``cd`` permet de se déplacer dans l'arborescence. Elle doit être suivie du chemin absolu ou du chemin relatif vers le dossier que l'on souhaite atteindre. Pour remonter d'un niveau il faut saisir ``..`` !

      Écrire les commandes puis les exécuter pour vous déplacer vers:
      
      - le dossier ``Images``
      - le dossier ``Documents`` 
      - le dossier ``python``
      - le dossier ``1``
      - le dossier ``eleve``

   d. La commande ``mkdir`` permet de créer un nouveau dossier. Il faut au préalable se placer dans le dossier qui contiendra le nouveau dossier. Puis on saisit la commande suivi du nom du dossier.

      - Créer un dossier nommé ``3`` dans le dossier ``Textes``.

      - Créer un dossier nommé ``linux`` dans le dossier ``Images``.
      
   e. La commande ``mv`` permet de déplacer un fichier d'un dossier à un autre. Elle est donc suivi du dossier contenant le fichier puis du dossier réceptionnant le fichier selon la syntaxe :

      .. code:: bash
      
         mv /chemin/vers/fichier /chemin/nouveau/dossier


      - Déplacer le fichier texte ``essai.txt`` vers le dossier ``3``.

      - Déplacer l'image ``tux.png`` vers le dossier ``linux``.

   f. La commande ``tree`` affiche l'arborescence du dossier où se trouve l'utilisateur. Afficher et reproduire l'arborescence du dossier de l'utilisateur ``eleve``.

      .. warning::

         Cette commande peut ne pas être disponible !

La gestion des permissions
--------------------------

Il y a trois types d'utilisateurs dans un système GNU/Linux:

- l'utilisateur propriétaire ``u`` (user) qui est actuellement connecté et propriétaire des fichiers.
- le groupe ``g`` (group) qui rassemble plusieurs utilisateurs.
- les autres utilisateurs ``o`` (others).

Il y a trois types de permissions sur les dossiers et les fichiers dans GNU/Linux.

- Le droit en lecture : ``r``
- Le droit en écriture : ``w``
- Le droit en exécution : ``x``

La commande ``ls -l`` affiche le contenu d'un dossier en donnant les permissions de chaque fichier et sous-dossier.

La figure ci-dessous donne un exemple de cet affichage:

.. image:: ../img/permission.svg
   :align: center
   
1. Lister le contenu du dossier ``Documents`` avec la commande ``ls -l`` puis relever les permissions du dossier ``python``.

2. Lister le contenu du dossier ``3`` avec la commande ``ls -l`` puis relever les permissions du fichier ``essai.txt``.

3. La commande ``chmod`` modifie les permissions d'un dossier ou d'un fichier. La syntaxe est la suivante:

   .. code:: bash
   
      chmod g+w nom_fichier --> ajoute la permission écrire au groupe.

      chmod o-x nom_dossier --> enlève la permission exécuter aux autres utilisateurs.

   a. Modifier les permissions d'un fichier.

      - Enlever le droit **lire** au fichier ``essai.txt`` pour l'utilisateur propriétaire du fichier. Quelle est la commande à saisir ?
      - Le fichier peut-il être affiché avec un éditeur de texte ?
      - Remettre le droit **lire** sur le fichier ``essai.txt`` puis vérifier son édition.
   
   b. Modifier les permissions d'un dossier.

      - Enlever le droit **écrire** au dossier ``2`` pour l'utilisateur propriétaire du dossier. Quelle est la commande à saisir ?
      - Déplacer le fichier ``essai.txt`` dans le dossier ``2``. Que remarquez-vous ?
      - Remettre le droit **écrire** au dossier ``2`` puis déplacer le ``essai.txt`` dans le dossier ``2``.

